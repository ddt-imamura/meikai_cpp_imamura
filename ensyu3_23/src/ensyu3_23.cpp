/*
 * 関数名: main
 * 説明	: 新版明解C++ 演習問題3-23
 *		  合計だけでなく平均も求めるようにList3-15, 3-16のプログラムをそれぞれ改変したものを作成する。
 * パラメータ:なし
 * 返り値:  0固定
 * 作成者: T.Imamura
 * 作成日: 2022.06.30
 * 備考:
 */
//以下、教本の記述を元に作成する

#include	<iostream>

using namespace std;

//それぞれのプログラム用に関数を用意する
void testFuncOne(void);	//List3-15用の関数
void testFuncTwo(void);	//List3-16用の関数

int main()
{
	cout << "List3-15改修プログラムを確認します。\n";
	testFuncOne();	//List3-15改修プログラム確認用
	cout << "List3-16改修プログラムを確認します。\n";
	testFuncTwo();	//List3-16改修プログラム確認用

	return 0;
}

/*
 * 関数名: testFuncOne
 * 説明	: 新版明解C++ 演習問題3-23
 *		  List3-15のプログラム（読み込んだ整数を加算（0が入力されたら終了）を
 *		  平均値も求められるように改変したものである。
 * パラメータ:なし
 * 返り値:  なし
 * 作成者: T.Imamura
 * 作成日: 2022.06.30
 * 備考:
 */

/* 追加した行には *******追加行*** とコメント */
void testFuncOne(void)
{
	int n;	  		//加算する整数
	cout << "整数を加算します。\n";	//内容を通知
	cout << "合計だけでなく平均も求めます。\n";			//*******追加行***
	cout << "何個加算しますか：";		//加算数値の個数を通知
	cin >> n;					//入力値を格納

	int sum = 0;	//合計値
	int loopCounter = 0;	//入力値の加算回数		//*******追加行***

	for ( int i = 1; i <= n; i++ ) {
		int t;					//入力値を格納する変数
		cout << "整数（0で終了）";	//入力を促す
		cin >> t;				//入力値を格納
		if(t == 0){	break; }	//入力値が０なら終了
		sum += t;
		loopCounter++;	//加算回数を記憶			//*******追加行***
	}
	//結果を表示
	cout << "合計は" << sum << "です。\n";
	cout << "平均は" << sum / loopCounter << "です。\n";	//*******追加行***

	return;
}

/*
 * 関数名: testFuncTwo
 * 説明	: 新版明解C++ 演習問題3-23
 *		  List3-16のプログラム（読み込んだ整数を加算（合計が1000を超えない範囲で加算）を
 *		  平均値も求められるように改変したものである。
 * パラメータ:なし
 * 返り値:  なし
 * 作成者: T.Imamura
 * 作成日: 2022.06.30
 * 備考:
 */

/* 追加した行には *******追加行*** とコメント */
void testFuncTwo(void)
{
	int n;	  		//加算する整数
	cout << "整数を加算します。\n";	//内容を通知
	cout << "合計だけでなく平均も求めます。\n";		//*******追加行***
	cout << "何個加算しますか：";		//加算数値の個数を通知
	cin >> n;					//入力値を格納

	int sum = 0;	//合計値
	int loopCounter = 0;	//入力値の加算回数		//*******追加行***

	for ( int i = 1; i <= n; i++ ) {
		int t;					//入力値を格納する変数
		cout << "整数:";	//入力を促す
		cin >> t;				//入力値を格納
		if(sum + t > 1000){	//1000を超えていないかを判定
			cout << "\a合計が1000を超えました。\a最後の数値は無視します。\n";
			break;
		}
		sum += t;
		loopCounter++;	//加算回数を記憶				//*******追加行***
	}
	//結果を表示
	cout << "合計は" << sum << "です。\n";
	cout << "平均は" << sum / loopCounter << "です。\n";	//*******追加行***

	return;
}
